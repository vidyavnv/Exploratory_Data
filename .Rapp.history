head(airquality)
str(airquality)
m <-matrix(rnorm(!00),10,10)
str(m)
m <-matrix(rnorm(100),10,10)
str(m)
m[,1]
s <- split(airquality,airquality$Month)
s
str(s)
str(dnorm)
str(pnorm)
x = 1:100
dnorm(x)
x <- rnorm(10)
x
x <- rnorm(10,20,2)
x
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(2,2)
ppois(4,2)
ppois(6,2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100,0,2)
y <- 0.5 + 2 * x + e
y
summary(y)
plot(x,y)
set.seed(10)
e <- rnorm(100,1,0.5)
e <- rnorm(100,0,2)
x <- rnorm(100,1,0.5)
y <- 0.5 + 2 * x + e
summary(y)
plot(x,y)
set.seed(10)
x <- rbinom(100,1,0.5)
y <- 0.5 + 2 * x + e
plot(x,y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3 * x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(letters,4)
sample(letters,5)
sample(1:10)
sample(1:10, replace = TRUE)
r*
quit
system.time(readLines("http://www.jhsph.edu"))
sample.interval
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
R.version.string
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt = sqrt(z - 1)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Vidya")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y<y > 0
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
y[c(3, 5, 7)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, 4, 5)
matrix(1:20, nrows =  4, ncols = 5)
matrix(1:20, nrow =  4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow =  4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
myapp = oauth_app("twitter",key="GOhQYezt9W1woYuaM0gYi98W2",secret="PzLuITcIgYoI9lYnE3YtCLxf388eThQAH2T2GQ7y7dKecMLgUa")
oauth_app
install.packages("ROAuth")
myapp = oauth_app("twitter",key="GOhQYezt9W1woYuaM0gYi98W2",secret="PzLuITcIgYoI9lYnE3YtCLxf388eThQAH2T2GQ7y7dKecMLgUa")
library(ROAuth)
library(RCurl)
library(twitteR)
install.packages("twitteR")
library(twitteR)
library(rjson)
library(twitteR)
library(ROAuth)
myapp = oauth_app("twitter",key="GOhQYezt9W1woYuaM0gYi98W2",secret="PzLuITcIgYoI9lYnE3YtCLxf388eThQAH2T2GQ7y7dKecMLgUa")
library(httr)
myapp = oauth_app("twitter",key="GOhQYezt9W1woYuaM0gYi98W2",secret="PzLuITcIgYoI9lYnE3YtCLxf388eThQAH2T2GQ7y7dKecMLgUa")
sig = sign_oauth1.0(myapp,token="1191067658-woqumG1dBHfM8jNUAqzOdiqnDgjeeRdqNrcwIhq",token_secret="OolmimZmQi2raCwtl6EwT2tnZ2nPoBZRZB0etQWy57RGz")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
json1 =  content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
install.packages("jsonlite")
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json1 =  content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2[1,1:8]
library(RMySQL)
install.packages("RMySQL")
install.packages('RMySQL', type='source')
library(datasets)
data(cars)
with(cars, plot(speed,dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xplot(Life.Exp ~ Income| region, data = state, layout = c(4,1))
xplot
??xplot
xyplot(Life.Exp ~ Income| region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income| region, data = state, layout = c(1,4))
library(ggplot2)
data(mpg)
qplot(displ,hwy,data=mpg)
names(mpg)
qplot(displ,hwy,data=mpg)
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind,Ozone))
airquality <- transform(airquality, Month = factor(Month))
Month
head(airquality)
library(datasets)
head(data(airquality))
data(airquality
read.csv
housing <- read.csv("household_power_consumption.txt",header=TRUE,sep=";",quote = "\"",comment.char = "",stringsAsFactors=FALSE)
housing_sub <- subset(housing,subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
head(housing_sub)
housing$Date <- as.Date(housing$Date, format="%d/%m/%Y")
housing_sub <- subset(housing,subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
head(housing_sub)
hist(housing_sub$Global_active_power)
hist(as.numeric(as.character(housing_sub$Global_active_power))
